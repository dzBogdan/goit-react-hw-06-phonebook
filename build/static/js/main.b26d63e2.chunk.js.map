{"version":3,"sources":["redux/type.js","redux/action.js","redux/reducer.js","redux/store.js","component/ContactForm.js","component/ContactsList.js","component/Filter.js","component/phonebook.js","reportWebVitals.js","index.js"],"names":["addContacs","createAction","type","deleteContacs","changeFiltr","items","createReducer","id","name","number","state","action","payload","arr","find","getContactbyName","window","alert","AddContact","filter","contact","combineReducers","rootreducer","contacts","ContactReducer","store","configureStore","reducer","connect","dispatch","handleButtonAdd","element","typeAction","useState","setName","setNumber","className","value","onChange","event","currentTarget","onClick","shortid","generate","normolizefilter","toLowerCase","includes","onDeleteContact","map","item","target","Phonebook","ContactsList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b26d63e2.chunk.js","sourcesContent":["const ADD = 'phonebook/add';\r\nconst DELETE = 'phonebook/delete';\r\nconst FILTER = 'phonebook/filter';\r\nconst CHANGE = 'phonebook/change';\r\n\r\nexport default {ADD,DELETE,FILTER,CHANGE}","import { createAction } from '@reduxjs/toolkit';\r\nimport type from './type';\r\n\r\n\r\nconst addContacs = createAction(type.ADD);\r\n\r\nconst deleteContacs = createAction(type.DELETE);\r\n\r\nconst changeFiltr = createAction(type.CHANGE);\r\n\r\n//const addContacs = (element) => ({\r\n//    type: type.ADD,\r\n//    payload: element\r\n//});\r\n\r\n//const deleteContacs = id => ({\r\n//    type: type.DELETE,\r\n//    payload: id\r\n//});\r\n\r\n//const changeFiltr = value => ({\r\n//    type: type.CHANGE,\r\n//    payload: value\r\n//})\r\n\r\nexport default {addContacs,deleteContacs,changeFiltr}","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport typeAction from \"./type\"\r\nimport action from './action';\r\n\r\n\r\n\r\nconst arr = [{ id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\r\n]\r\n\r\n\r\nconst AddContact = (state, payload) => {\r\n    const getContactbyName = (arr, name) => arr.find(arr =>arr.name===name);\r\n    const findContact = getContactbyName(state, payload.name);\r\n\r\n    \r\n    if (findContact) {\r\n        window.alert('Контакт с таким именем существует');\r\n        return state\r\n    }\r\n    else {\r\n        return [...state, payload]\r\n    }\r\n}\r\n\r\nconst items = createReducer(arr, {\r\n    'phonebook/add': (state, action) => AddContact(state, action.payload),\r\n    'phonebook/delete': (state, action) => state.filter(contact => contact.id !== action.payload)\r\n    \r\n}); \r\n\r\nconst filter =createReducer('', {\r\n    'phonebook/change': (state, action) => action.payload\r\n }) \r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport ContactReducer from './reducer';\r\nimport { render } from '@testing-library/react';\r\n\r\nconst rootreducer = combineReducers({\r\n    contacts: ContactReducer\r\n})\r\n\r\n//const store = createStore(reducer, composeWithDevTools());\r\nconst store = configureStore({\r\n    reducer: rootreducer,\r\n})\r\n\r\n\r\nexport default store;","import { useState } from 'react';\r\nimport typeAction from '../redux/action';\r\nimport shortid from 'shortid';\r\nimport './phonebook.moduls.css';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n function ContactForm({handleButtonAdd }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleInputNameChenge = event => {\r\n        setName(event.currentTarget.value);\r\n        \r\n                 \r\n    }\r\n\r\n    const handleInputNumberChenge = event => {\r\n        setNumber(event.currentTarget.value);\r\n    }\r\n\r\n   const  handleAdd = event =>{\r\n        const element =  {\r\n            id:shortid.generate(),\r\n            name:name,\r\n            number:number\r\n        }\r\n        \r\n        handleButtonAdd(element);\r\n          \r\n      } \r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <label className=\"phoneBook__name\">Имя\r\n                <input type=\"text\"\r\n                    value={name}\r\n                    onChange={handleInputNameChenge}\r\n                    className=\"name__input\"\r\n                />\r\n            </label>\r\n            <br />\r\n            <label className=\"phoneBook__number\"> Номер\r\n                <input type=\"text\"\r\n                    value={number}\r\n                    onChange={handleInputNumberChenge}\r\n                    className=\"number__input\"\r\n                />\r\n            </label>\r\n            <br />\r\n            <button type=\"button\" onClick={handleAdd}\r\n                className=\"phoneBook__button\">Добавить контакт</button>\r\n            <br />\r\n        </div>);\r\n}\r\n\r\nconst mapDispatchtoProp = dispatch => ({\r\n    handleButtonAdd : element => dispatch(typeAction.addContacs(element))\r\n}) \r\n\r\nexport default connect(null,mapDispatchtoProp)(ContactForm)\r\n\r\n\r\n","\r\nimport { connect } from 'react-redux';\r\nimport typeAction from '../redux/action';\r\nimport './phonebook.moduls.css';\r\n\r\n\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n   \r\n    return (\r\n        <div>\r\n            <h3>Контакты</h3>\r\n            <ul className=\"contact__list\">\r\n                {contacts.map(item => (\r\n                    <li key={item.id} className=\"list__item\">\r\n                        <p>{`${item.name} : ${item.number}`}</p>\r\n                        <button className=\"list__button\" onClick={() => onDeleteContact(item.id)}>Удалить</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}  \r\n\r\nconst mapStateToProp = state => {\r\n    const { filter, items } = state.contacts;\r\n    const normolizefilter = filter.toLowerCase();\r\n    const visibleContacts = items.filter(contact => contact.name.toLowerCase().includes(normolizefilter));\r\n    return { contacts: visibleContacts }\r\n}\r\n\r\nconst mapDispatchToProp = dispatch => ({\r\n    onDeleteContact: id => dispatch(typeAction.deleteContacs(id))\r\n})\r\n\r\nexport default connect(mapStateToProp,mapDispatchToProp)(ContactList)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport typeAction from '../redux/action';\r\nimport './phonebook.moduls.css';\r\n\r\n function Filter({ value,onChange}) { \r\n  return (\r\n     <>\r\n     <label>Фильтр для поиска</label>\r\n     <br/>\r\n      <input type=\"text\"\r\n                value={value}\r\n                onChange={onChange}\r\n                className=\"filter__input\"\r\n      />\r\n     </> \r\n  )\r\n}\r\n\r\nconst mapStateToProp = (state) => ({\r\n  value: state.contacts.filter\r\n});\r\n\r\nconst mapDispatchtoProp = dispatch => ({\r\n    onChange : (event) => dispatch(typeAction.changeFiltr(event.target.value))\r\n}) \r\n\r\nexport default connect(mapStateToProp, mapDispatchtoProp)(Filter)","import { useState} from 'react';\r\nimport ContactForm from './ContactForm';\r\nimport ContactsList from './ContactsList';\r\nimport Filter from './Filter';\r\n\r\n\r\nimport './phonebook.moduls.css';\r\n\r\n  \r\nexport default function Phonebook (){\r\n  \r\n  \r\n   \r\n        return(\r\n            <div>\r\n              \r\n                <h2>Телефонная книга</h2>\r\n                <ContactForm />\r\n                <Filter />               \r\n                <ContactsList />  \r\n                      \r\n            </div>   \r\n        )\r\n    \r\n} \r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport App from './component/phonebook';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store}>\n      <App />\n    </Provider>  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}